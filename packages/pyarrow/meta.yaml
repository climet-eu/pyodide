package:
  name: pyarrow
  version: 19.1.0
  top-level:
    - pyarrow
source:
  url: https://github.com/apache/arrow/releases/download/apache-arrow-19.0.1/apache-arrow-19.0.1.tar.gz
  sha256: acb76266e8b0c2fbb7eb15d542fbb462a73b3fd1e32b80fad6c2fafd95a51160
  patches:
    - patches/autoload_timezones.patch
    - patches/0002-require-pyodide-unix-timezones.patch
build:
  script: |
    # move things around so that the top level folder is the python folder
    # with the pyproject.toml, so pyodide build works
    cd ..
    # build libarrow as static library without the pyodide toolchain file
    # because that does bad things to the build
    BACKUP_TOOLCHAIN=${CMAKE_TOOLCHAIN_FILE}
    unset CMAKE_TOOLCHAIN_FILE
    if [ ! -d "${PKG_BUILD_DIR}_cpp" ]; then
      mv $PKG_BUILD_DIR ${PKG_BUILD_DIR}_cpp
      cp -r ${PKG_BUILD_DIR}_cpp/python $PKG_BUILD_DIR
      # build arrow cpp library and install to emscripten sysroot
      # n.b. the if statements below mean that you can call pyodide build-packages-no-deps
      # pyarrow --continue to debug build errors without having to do a full rebuild
      mkdir cppbuild
      cd cppbuild
      emcmake cmake --preset ninja-release-emscripten ${PKG_BUILD_DIR}_cpp/cpp
    else
      cd cppbuild
    fi
    cmake --build . --target=protobuf_ep_host -j 4
    cmake --build . --target=install -j 4
    cd ${PKG_BUILD_DIR}
    export CMAKE_TOOLCHAIN_FILE=${BACKUP_TOOLCHAIN}
    rm -f CMakeCache.txt
    rm -rf CMakeFiles
  cross-script: |
    cmake --version
about:
  home: https://arrow.apache.org/
  PyPI: https://pypi.org/project/pyarrow
  summary: Python library for Apache Arrow
  license: Apache License, Version 2.0
requirements:
  run:
    - numpy                   # required, not loaded immediately
  host:
    - numpy
extra:
  recipe-maintainers:
    - joemarshall

diff --git a/codecs/build/Cargo.toml b/codecs/build/Cargo.toml
index 729c000..85ba931 100644
--- a/codecs/build/Cargo.toml
+++ b/codecs/build/Cargo.toml
@@ -16,24 +16,24 @@ wasi-preview1-component-adapter-provider = { workspace = true }
 wit-component = { workspace = true }
 
 # list of all codecs we build
-asinh-codec = { workspace = true }
-bit-round-codec = { workspace = true }
-fixed-offset-scale-codec = { workspace = true }
-fourier-network-codec = { workspace = true }
-identity-codec = { workspace = true }
-linear-quantize-codec = { workspace = true }
-log-codec = { workspace = true }
-random-projection-codec = { workspace = true }
-reinterpret-codec = { workspace = true }
-round-codec = { workspace = true }
-swizzle-reshape-codec = { workspace = true }
-uniform-noise-codec = { workspace = true }
-zfp-codec = { workspace = true }
-zlib-codec = { workspace = true }
-zstd-codec = { workspace = true }
+# asinh-codec = { workspace = true }
+# bit-round-codec = { workspace = true }
+# fixed-offset-scale-codec = { workspace = true }
+# fourier-network-codec = { workspace = true }
+# identity-codec = { workspace = true }
+# linear-quantize-codec = { workspace = true }
+# log-codec = { workspace = true }
+# random-projection-codec = { workspace = true }
+# reinterpret-codec = { workspace = true }
+# round-codec = { workspace = true }
+# swizzle-reshape-codec = { workspace = true }
+# uniform-noise-codec = { workspace = true }
+# zfp-codec = { workspace = true }
+# zlib-codec = { workspace = true }
+# zstd-codec = { workspace = true }
 
-[target.'cfg(not(target_arch = "wasm32"))'.build-dependencies]
-sz3-codec = { workspace = true }
+# [target.'cfg(not(target_arch = "wasm32"))'.build-dependencies]
+# sz3-codec = { workspace = true }
 
 [lints]
 workspace = true
diff --git a/codecs/build/build.rs b/codecs/build/build.rs
index 8573982..5d2130b 100644
--- a/codecs/build/build.rs
+++ b/codecs/build/build.rs
@@ -5,15 +5,15 @@ use std::{
     process::Command,
 };
 
-#[cfg(not(target_arch = "wasm32"))]
-use sz3_codec as _;
-use ::{
-    asinh_codec as _, bit_round_codec as _, fixed_offset_scale_codec as _,
-    fourier_network_codec as _, identity_codec as _, linear_quantize_codec as _, log_codec as _,
-    random_projection_codec as _, reinterpret_codec as _, round_codec as _,
-    swizzle_reshape_codec as _, uniform_noise_codec as _, zfp_codec as _, zlib_codec as _,
-    zstd_codec as _,
-};
+// #[cfg(not(target_arch = "wasm32"))]
+// use sz3_codec as _;
+// use ::{
+//     asinh_codec as _, bit_round_codec as _, fixed_offset_scale_codec as _,
+//     fourier_network_codec as _, identity_codec as _, linear_quantize_codec as _, log_codec as _,
+//     random_projection_codec as _, reinterpret_codec as _, round_codec as _,
+//     swizzle_reshape_codec as _, uniform_noise_codec as _, zfp_codec as _, zlib_codec as _,
+//     zstd_codec as _,
+// };
 
 fn main() -> io::Result<()> {
     // Check for `clippy` and return early in this case
diff --git a/fcbench/Cargo.toml b/fcbench/Cargo.toml
index 5d70ed2..4c053ca 100644
--- a/fcbench/Cargo.toml
+++ b/fcbench/Cargo.toml
@@ -14,7 +14,7 @@ name = "fcbench"
 crate-type = ["cdylib"]
 
 [dependencies]
-codecs-build = { workspace = true }
+# codecs-build = { workspace = true }
 convert_case = { workspace = true }
 core-benchmark = { workspace = true }
 core-compressor = { workspace = true }
diff --git a/fcbench/src/lib.rs b/fcbench/src/lib.rs
index af8660b..76dc2bd 100644
--- a/fcbench/src/lib.rs
+++ b/fcbench/src/lib.rs
@@ -3,7 +3,7 @@
 
 use pyo3::prelude::*;
 
-use codecs_build as _;
+// use codecs_build as _;
 
 mod benchmark;
 pub mod compressor;
diff --git a/wasi/build/Cargo.toml b/wasi/build/Cargo.toml
index b00ee40..b612ab1 100644
--- a/wasi/build/Cargo.toml
+++ b/wasi/build/Cargo.toml
@@ -15,11 +15,11 @@ scratch = { workspace = true }
 wit-component = { workspace = true }
 
 # list of all WASI components we build
-virtual-wasi-cli = { workspace = true }
-virtual-wasi-clocks = { workspace = true }
-virtual-wasi-filesystem = { workspace = true }
-virtual-wasi-io = { workspace = true }
-virtual-wasi-random = { workspace = true }
+# virtual-wasi-cli = { workspace = true }
+# virtual-wasi-clocks = { workspace = true }
+# virtual-wasi-filesystem = { workspace = true }
+# virtual-wasi-io = { workspace = true }
+# virtual-wasi-random = { workspace = true }
 
 [lints]
 workspace = true
diff --git a/wasi/build/build.rs b/wasi/build/build.rs
index 43c4a80..072bff5 100644
--- a/wasi/build/build.rs
+++ b/wasi/build/build.rs
@@ -5,10 +5,10 @@ use std::{
     process::Command,
 };
 
-use ::{
-    virtual_wasi_cli as _, virtual_wasi_clocks as _, virtual_wasi_filesystem as _,
-    virtual_wasi_io as _, virtual_wasi_random as _,
-};
+// use ::{
+//     virtual_wasi_cli as _, virtual_wasi_clocks as _, virtual_wasi_filesystem as _,
+//     virtual_wasi_io as _, virtual_wasi_random as _,
+// };
 
 fn main() -> io::Result<()> {
     // Check for `clippy` and skip compilation in that case

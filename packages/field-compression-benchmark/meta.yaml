package:
  name: field-compression-benchmark
  version: 0.0.9
  top-level:
    - fcbench
source:
  url: https://files.pythonhosted.org/packages/fb/a3/ab6e6995e0649022e087acef5d80a0ee31ed8b213440b9e88d09bd36e386/field-compression-benchmark-0.0.9.tar.gz
  sha256: 724e29c498b92670512519891a21817c717decfed8d1e0ba84a99a6c7dbdaff9
  patches:
    - patches/0001-codecs-build.patch
build:
  script: |
    # Set up a more modern nightly toolchain with support for emscripten and wasm
    export RUSTUP_TOOLCHAIN="nightly-2024-07-21"  # last 1.81 nightly
    rustup toolchain install ${RUSTUP_TOOLCHAIN}
    rustup target add wasm32-unknown-emscripten --toolchain ${RUSTUP_TOOLCHAIN}
    rustup target add wasm32-unknown-unknown --toolchain ${RUSTUP_TOOLCHAIN}
    rustup component add rust-src --toolchain ${RUSTUP_TOOLCHAIN}

    # Fetch the pre-built WASM codecs from one of the wheels
    wget https://files.pythonhosted.org/packages/52/1c/4163cbf7501ee027f7b32b1b15e3a57963c21de96961ceab308d34c5660a/field_compression_benchmark-0.0.9-cp311-cp311-manylinux_2_28_x86_64.whl -O fcbench.zip
    unzip -j fcbench.zip fcbench/data/codecs/*.wasm -d data/codecs/
    rm fcbench.zip
requirements:
  executable:
    - rustup
  run:
    - cfgrib  # 0.9.10.4
    - dask  # 2024.2.1
    - matplotlib  # 3.5.2
    - netcdf4  # 1.6.5
    - numcodecs  # 0.12.1
    - numpy  # 1.26.4
    - pint  # 0.23
    - xarray  # 2023.12.0
    - xeofs  # 2.3.1
    - xhistogram  # 0.3.2
    - zarr  # 2.17.0
about:
  home: https://github.com/juntyr/field-compression-benchmark
  summary:
    The suite compares the performance of various data compression methods with
    different settings across a variety of variables and their derivatives from
    different GRIB, NetCDF, or Zarr datasets.
  license: MIT OR Apache-2.0

package:
  name: field-compression-benchmark
  version: 0.0.10
  top-level:
    - fcbench
source:
  url: https://files.pythonhosted.org/packages/50/0e/29c5bcc77c8b8684d9c5a66b1db5ba5fccd152ddd52612a20540610b6878/field-compression-benchmark-0.0.10.tar.gz
  sha256: 85adf8622988f1363d4ffb26d93d45c90cbff1dab44ae50260ccccd9fe839331
  patches:
    - patches/0001-codecs-build.patch
    - patches/0002-rust-emscripten-file-size.patch
build:
  script: |
    # Set up a more modern nightly toolchain with support for emscripten and wasm
    export RUSTUP_TOOLCHAIN="nightly-2024-07-21"  # last 1.81 nightly
    rustup toolchain install ${RUSTUP_TOOLCHAIN}
    rustup target add wasm32-unknown-emscripten --toolchain ${RUSTUP_TOOLCHAIN}
    rustup target add wasm32-unknown-unknown --toolchain ${RUSTUP_TOOLCHAIN}
    rustup component add rust-src --toolchain ${RUSTUP_TOOLCHAIN}

    # Fetch the pre-built WASM codecs from one of the wheels
    wget https://files.pythonhosted.org/packages/f5/f2/3c70fd2581ada66ffc3bdaea63c65689c38cb5539a1cb9e622bfa718331d/field_compression_benchmark-0.0.10-cp311-cp311-manylinux_2_28_x86_64.whl -O fcbench.zip
    unzip -j fcbench.zip fcbench/data/codecs/*.wasm -d data/codecs/
    rm fcbench.zip
requirements:
  executable:
    - rustup
  run:
    - cfgrib  # 0.9.10.4
    - dask  # 2024.2.1
    - matplotlib  # 3.5.2
    - netcdf4  # 1.6.5
    - numcodecs  # 0.12.1
    - numpy  # 1.26.4
    - pint  # 0.23
    - xarray  # 2023.12.0
    - xeofs  # 2.3.1
    - xhistogram  # 0.3.2
    - zarr  # 2.17.0
about:
  home: https://github.com/juntyr/field-compression-benchmark
  summary:
    The suite compares the performance of various data compression methods with
    different settings across a variety of variables and their derivatives from
    different GRIB, NetCDF, or Zarr datasets.
  license: MIT OR Apache-2.0
